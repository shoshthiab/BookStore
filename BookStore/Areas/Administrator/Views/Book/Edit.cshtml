@model BookStore.Models.Book

@{
    ViewData["Title"] = "Edit Book";
}

<h2>Edit [@Model.BookTitle]</h2>
<hr style="margin:0;padding:0;" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="BookId" />
            <div class="form-group">
                <label asp-for="BookTitle" class="control-label"></label>
                <input asp-for="BookTitle" class="form-control" />
                <span asp-validation-for="BookTitle" class="text-danger"></span>
            </div>
           @*  <div class="form-group">
                <label asp-for="Language" class="control-label"></label>
                <select asp-for="Language" class="form-control"></select>
                <span asp-validation-for="Language" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Topic" class="control-label"></label>
                <select asp-for="Topic" class="form-control"></select>
                <span asp-validation-for="Topic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Available" class="control-label"></label>
                <select asp-for="Available" class="form-control"></select>
                <span asp-validation-for="Available" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Language" class="control-label"></label>
                @Html.DropDownListFor(model => model.Language,
                         new SelectList(Enum.GetValues(typeof(Book.lang)).Cast<Book.lang>().Select(e => new { Id = e, Name = e.ToString() }), "Id", "Name"),
                         "Select Book Language",
                         new { @class = "form-control" })
                <span asp-validation-for="Language" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Topic" class="control-label"></label>
                @Html.DropDownListFor(model => model.Topic,
                         new SelectList(Enum.GetValues(typeof(Book.field)).Cast<Book.field>().Select(e => new { Id = e, Name = e.ToString() }), "Id", "Name"),
                         "Select Book Topic",
                         new { @class = "form-control" })
                <span asp-validation-for="Topic" class="text-danger"></span>
            </div>



            @* <div class="form-group">
                <label asp-for="Available" class="control-label"></label>
                @Html.DropDownListFor(model => model.Available,
                         new SelectList(Enum.GetValues(typeof(Book.availability)).Cast<Book.availability>().Select(e => new { Id = e, Name = e.ToString() }), "Id", "Name"),
                         "Select Book Availability",
                         new { @class = "form-control" })
                <span asp-validation-for="Available" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Currency" class="control-label"></label>
                @Html.DropDownListFor(model => model.Currency,
                         new SelectList(Enum.GetValues(typeof(Book.currency)).Cast<Book.currency>().Select(e => new { Id = e, Name = e.ToString() }), "Id", "Name"),
                         "Select Book Currency",
                         new { @class = "form-control" })
                <span asp-validation-for="Currency" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Available" class="control-label"></label>
                @Html.DropDownListFor(model => model.Available,
                         new SelectList(Enum.GetValues(typeof(Book.availability)).Cast<Book.availability>().Select(e => new { Id = e, Name = e.ToString() }), "Id", "Name"),
                         "Select Book Availability",
                         new { @class = "form-control", id = "AvailableDropdown" }) <!-- إضافة معرف للحقل -->
                <span asp-validation-for="Available" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AvailableQuantity" class="control-label"></label>
                <input asp-for="AvailableQuantity" class="form-control" id="AvailableQuantityInput" />
                <span asp-validation-for="AvailableQuantity" class="text-danger"></span>
            </div>
            @* <div class="form-group">
                <label asp-for="AvailableQuantity" class="control-label"></label>
                <input asp-for="AvailableQuantity" class="form-control" />
                <span asp-validation-for="AvailableQuantity" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="AuthorName" class="control-label"></label>
                <input asp-for="AuthorName" class="form-control" />
                <span asp-validation-for="AuthorName" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="AuthorId" class="control-label"></label>
                @Html.DropDownList("AuthorId", (SelectList)ViewBag.Authors, "Select Author", new { @class = "form-control" })
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDeleted" /> @Html.DisplayNameFor(model => model.IsDeleted)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="CreationDate" class="control-label"></label>
                <input asp-for="CreationDate" class="form-control" />
                <span asp-validation-for="CreationDate" class="text-danger"></span>
            </div> 

            <div class="form-group">
                <label asp-for="BookImagePath">Current Book Image</label><br />
                @if (!string.IsNullOrEmpty(Model.BookImagePath))
                {
                    <img src="@Model.BookImagePath" alt="Author Image" style="max-width: 200px;" />
                }
            </div>
            <div class="form-group">
                <label for="imageFile">Upload New Book Image</label>
                <input type="file" name="imageFile" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn Anotherbtn" style="margin-top:7px;margin-bottom:3px" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" style="text-decoration:underline;color:#2a2438">Back to Books List</a>
</div>

<script>
  
    document.addEventListener("DOMContentLoaded", function () {
        var availability = document.getElementById("AvailableDropdown").value;
        var quantityInput = document.getElementById("AvailableQuantityInput");

        if (availability === "SoldOut") {
            quantityInput.value = 0;
            quantityInput.disabled = true;
        } else {
            quantityInput.value = 1;
            quantityInput.disabled = false; 
        }
    });

    document.getElementById("AvailableDropdown").addEventListener("change", function () {
        var availability = this.value;
        var quantityInput = document.getElementById("AvailableQuantityInput");

        if (availability === "SoldOut") {
            quantityInput.value = 0; 
            quantityInput.disabled = true; 
        } else {
            quantityInput.value = 1;
            quantityInput.disabled = false; 
        }
    });
</script>